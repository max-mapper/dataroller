var util = require('util')
var stream = require('stream')

function SHPJSONToCSV() {
  this.headers = []
  this.headersWritten = false
  this.sep = ','
  this.lineSep = '\n'
  this.readable = true
  this.writable = true
  stream.Stream.call(this)
}

util.inherits(SHPJSONToCSV, stream.Stream)

SHPJSONToCSV.prototype.objectToRow = function(obj) {
  var startedOutput = false
  var self = this
  var row = ""
  self.headers.forEach(function(header) {
    var val = obj.properties[header]
    row += self.formatCellForRow(val, startedOutput)
    startedOutput = true
  })
  if (obj.geometry.type === "Point") {
    row += self.formatCellForRow(obj.geometry.coordinates[1], startedOutput)
    row += self.formatCellForRow(obj.geometry.coordinates[0], startedOutput)
  }
  row += self.formatCellForRow(obj.geometry, startedOutput)
  row += self.formatCellForRow(obj.geometry.type, startedOutput)
  row += self.lineSep
  return row
}

SHPJSONToCSV.prototype.formatCellForRow = function(val, startedOutput) {
  var output = ""
  if (val) {
    if (startedOutput) output += this.sep
    output += this.escapeCell(val)
  } else {
    if (startedOutput) output += this.sep
  }
  return output
}

SHPJSONToCSV.prototype.escapeCell = function(val) {
  if (typeof(val) == "object") val = JSON.stringify(val)
  if (typeof(val) == "string") val = val.replace(/\"/g, '""')
  return "\"" + val + "\""
}

SHPJSONToCSV.prototype.objectToHeaderRow = function(obj) {
  this.headers = Object.keys(obj.properties)
  var extraRows = []
  if (obj.geometry.type === "Point") {
    extraRows = ['latitude', 'longitude']
  }
  return this.headers.concat(extraRows).concat(['geometry', 'type']).join(this.sep) + this.lineSep
}

SHPJSONToCSV.prototype.write = function(obj) {
  if (!obj.properties) obj.properties = {}
  if (!this.headersWritten) {
    this.emit('data', this.objectToHeaderRow(obj))
    this.headersWritten = true
  } else {
    this.emit('data', this.objectToRow(obj))
  }
  return true
}

SHPJSONToCSV.prototype.end = function() {
  this.emit('end')
}

module.exports = function() {
  return new SHPJSONToCSV()
}

module.exports.SHPJSONToCSV = SHPJSONToCSV
